{"mappings":"AAAA,MAAM,eAAe,GAAG,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,AAAC;AAE1D,MAAM,OAAO,GAAG,SAAU,CAAC,EAAE;IAC3B,OAAO,IAAI,OAAO,CAAC,SAAU,CAAC,EAAE,MAAM,EAAE;QACtC,UAAU,CAAC,WAAY;YACrB,MAAM,CAAC,IAAI,KAAK,CAAC,CAAC,qCAAqC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;SACvE,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC;KACd,CAAC,CAAC;CACJ,AAAC;AAEF,uCAAuC;AAEvC,uCAAuC;AACvC,MAAM,UAAU,GAAG,UAAY;IAC7B,oBAAoB;IACpB,IAAI;QACF,MAAM,GAAG,GAAG,MAAM,KAAK,CAAC,2EAA2E,CAAC,AAAC;QACrG,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,IAAI,EAAE,AAAC;QAE9B,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,MAAM,IAAI,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAEjE,IAAI,EAAE,MAAM,CAAA,EAAE,GAAG,IAAI,CAAC,IAAI,AAAC;QAE3B,gCAAgC;QAChC,MAAM,GAAG;YACP,EAAE,EAAE,MAAM,CAAC,EAAE;YACb,KAAK,EAAE,MAAM,CAAC,KAAK;YACnB,WAAW,EAAE,MAAM,CAAC,WAAW;YAC/B,SAAS,EAAE,MAAM,CAAC,SAAS;YAC3B,QAAQ,EAAE,MAAM,CAAC,QAAQ;YACzB,KAAK,EAAE,MAAM,CAAC,SAAS;YACvB,WAAW,EAAE,MAAM,CAAC,YAAY;YAChC,SAAS,EAAE,MAAM,CAAC,UAAU;SAC7B,CAAC;QAEF,kBAAkB;QAElB,MAAM,MAAM,GAAG,CAAC;;eAEL,EAAE,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC;;cAEpC,EAAE,MAAM,CAAC,KAAK,CAAC;;;;;;;;;mEASsC,EAAE,MAAM,CAAC,WAAW,CAAC;;;;;;;kEAOtB,EAAE,MAAM,CAAC,QAAQ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAiC9E,EAAE,MAAM,CAAC,WAAW,CACjB,GAAG,CAAC,CAAC,GAAG,GAAK;YACZ,OAAO,CAAC;;;;;wCAKsB,EAAE,GAAG,CAAC,QAAQ,CAAC;;uCAEhB,EAAE,GAAG,CAAC,IAAI,CAAC;YACtC,EAAE,GAAG,CAAC,WAAW,CAAC;;;QAGtB,CAAC,CAAC;SACD,CAAC,CACD,IAAI,CAAC,EAAE,CAAC,CAAC;;;;;;;;;;;wCAWsB,EAAE,MAAM,CAAC,SAAS,CAAC;;;;;aAK9C,EAAE,MAAM,CAAC,SAAS,CAAC;;;;;;;;;IAS5B,CAAC,AAAC;QAEF,eAAe,CAAC,SAAS,GAAG,EAAE,CAAC,CAAC,yBAAyB;QACzD,eAAe,CAAC,kBAAkB,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;KAC1D,CAAC,OAAO,KAAK,EAAE;QACd,KAAK,CAAC,KAAK,CAAC,CAAC;KACd;CACF,AAAC;AAEF,UAAU,EAAE,CAAC","sources":["src/js/controller.js"],"sourcesContent":["const recipeContainer = document.querySelector(\".recipe\");\n\nconst timeout = function (s) {\n  return new Promise(function (_, reject) {\n    setTimeout(function () {\n      reject(new Error(`Request took too long! Timeout after ${s} second`));\n    }, s * 1000);\n  });\n};\n\n// https://forkify-api.herokuapp.com/v2\n\n///////////////////////////////////////\nconst showRecipe = async () => {\n  //loading the recipe\n  try {\n    const res = await fetch(\"https://forkify-api.herokuapp.com/api/v2/recipes/5ed6604591c37cdc054bc886\");\n    const data = await res.json();\n\n    if (!res.ok) throw new Error(`${data.message}, (${res.status})`);\n\n    let { recipe } = data.data;\n\n    //format the underscore notation\n    recipe = {\n      id: recipe.id,\n      title: recipe.title,\n      ingredients: recipe.ingredients,\n      publisher: recipe.publisher,\n      servings: recipe.servings,\n      image: recipe.image_url,\n      cookingTime: recipe.cooking_time,\n      sourceUrl: recipe.source_url,\n    };\n\n    //rendering recipe\n\n    const markup = `\n    <figure class=\"recipe__fig\">\n      <img src=${recipe.image} alt=${recipe.title} class=\"recipe__img\" />\n      <h1 class=\"recipe__title\">\n        <span>${recipe.title}</span>\n      </h1>\n    </figure>\n\n    <div class=\"recipe__details\">\n      <div class=\"recipe__info\">\n        <svg class=\"recipe__info-icon\">\n          <use href=\"src/img/icons.svg#icon-clock\"></use>\n        </svg>\n        <span class=\"recipe__info-data recipe__info-data--minutes\">${recipe.cookingTime}</span>\n        <span class=\"recipe__info-text\">minutes</span>\n      </div>\n      <div class=\"recipe__info\">\n        <svg class=\"recipe__info-icon\">\n          <use href=\"src/img/icons.svg#icon-users\"></use>\n        </svg>\n        <span class=\"recipe__info-data recipe__info-data--people\">${recipe.servings}</span>\n        <span class=\"recipe__info-text\">servings</span>\n\n        <div class=\"recipe__info-buttons\">\n          <button class=\"btn--tiny btn--increase-servings\">\n            <svg>\n              <use href=\"src/img/icons.svg#icon-minus-circle\"></use>\n            </svg>\n          </button>\n          <button class=\"btn--tiny btn--increase-servings\">\n            <svg>\n              <use href=\"src/img/icons.svg#icon-plus-circle\"></use>\n            </svg>\n          </button>\n        </div>\n      </div>\n\n      <div class=\"recipe__user-generated\">\n        <svg>\n          <use href=\"src/img/icons.svg#icon-user\"></use>\n        </svg>\n      </div>\n      <button class=\"btn--round\">\n        <svg class=\"\">\n          <use href=\"src/img/icons.svg#icon-bookmark-fill\"></use>\n        </svg>\n      </button>\n    </div>\n\n    <div class=\"recipe__ingredients\">\n      <h2 class=\"heading--2\">Recipe ingredients</h2>\n      <ul class=\"recipe__ingredient-list\">\n\n      ${recipe.ingredients\n        .map((ing) => {\n          return `\n        <li class=\"recipe__ingredient\">\n          <svg class=\"recipe__icon\">\n            <use href=\"src/img/icons.svg#icon-check\"></use>\n          </svg>\n          <div class=\"recipe__quantity\">${ing.quantity}</div>\n          <div class=\"recipe__description\">\n            <span class=\"recipe__unit\">${ing.unit}</span>\n            ${ing.description}\n          </div>\n        </li>\n        `;\n        })\n        .join(\"\")}\n\n        \n\n      </ul>\n    </div>\n\n    <div class=\"recipe__directions\">\n      <h2 class=\"heading--2\">How to cook it</h2>\n      <p class=\"recipe__directions-text\">\n        This recipe was carefully designed and tested by\n        <span class=\"recipe__publisher\">${recipe.publisher}</span>. Please check out\n        directions at their website.\n      </p>\n      <a\n        class=\"btn--small recipe__btn\"\n        href=${recipe.sourceUrl}\n        target=\"_blank\"\n      >\n        <span>Directions</span>\n        <svg class=\"search__icon\">\n          <use href=\"src/img/icons.svg#icon-arrow-right\"></use>\n        </svg>\n      </a>\n    </div>    \n    `;\n\n    recipeContainer.innerHTML = \"\"; // clear the initial text\n    recipeContainer.insertAdjacentHTML(\"afterbegin\", markup);\n  } catch (error) {\n    alert(error);\n  }\n};\n\nshowRecipe();\n"],"names":[],"version":3,"file":"index.62406edb.js.map","sourceRoot":"/__parcel_source_root/"}